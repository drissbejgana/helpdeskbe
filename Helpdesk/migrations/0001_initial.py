# Generated by Django 4.0.6 on 2022-08-29 14:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Categorie',
            },
        ),
        migrations.CreateModel(
            name='Elements',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
                ('descriptionfr', models.TextField(blank=True, db_column='DescriptionFr', null=True)),
                ('descriptionar', models.TextField(blank=True, db_column='DescriptionAr', null=True)),
            ],
            options={
                'db_table': 'Elements',
            },
        ),
        migrations.CreateModel(
            name='Entite',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
                ('shortename', models.CharField(blank=True, db_column='ShorteName', max_length=100, null=True)),
                ('entiteparrent', models.ForeignKey(blank=True, db_column='EntiteParrent_Id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Helpdesk.entite')),
            ],
            options={
                'db_table': 'Entite',
            },
        ),
        migrations.CreateModel(
            name='Etat',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
                ('isdefault', models.BooleanField(db_column='IsDefault')),
                ('etatcolor', models.CharField(blank=True, db_column='EtatColor', max_length=20, null=True)),
                ('etatclass', models.CharField(blank=True, db_column='EtatClass', max_length=20, null=True)),
                ('etatorder', models.IntegerField(db_column='EtatOrder')),
            ],
            options={
                'db_table': 'Etat',
            },
        ),
        migrations.CreateModel(
            name='Priorite',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
                ('isdefault', models.BooleanField(db_column='IsDefault')),
                ('prioritecolor', models.CharField(blank=True, db_column='PrioriteColor', max_length=20, null=True)),
                ('prioriteclass', models.CharField(blank=True, db_column='PrioriteClass', max_length=20, null=True)),
                ('prioriteorder', models.IntegerField(db_column='PrioriteOrder')),
            ],
            options={
                'db_table': 'Priorite',
            },
        ),
        migrations.CreateModel(
            name='Typecategorie',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
            ],
            options={
                'db_table': 'TypeCategorie',
            },
        ),
        migrations.CreateModel(
            name='Typeelement',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
            ],
            options={
                'db_table': 'TypeElement',
            },
        ),
        migrations.CreateModel(
            name='Typeentite',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('namefr', models.CharField(blank=True, db_column='NameFr', max_length=100, null=True)),
                ('namear', models.CharField(blank=True, db_column='NameAr', max_length=100, null=True)),
            ],
            options={
                'db_table': 'TypeEntite',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('entite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_entite', to='Helpdesk.entite')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('objet', models.CharField(db_column='Objet', max_length=150)),
                ('description', models.CharField(db_column='Description', max_length=400)),
                ('observation', models.CharField(blank=True, db_column='Observation', max_length=400, null=True)),
                ('mesureaprendre', models.CharField(blank=True, db_column='MesureAprendre', max_length=400, null=True)),
                ('supplementaire', models.CharField(blank=True, db_column='Supplementaire', max_length=400, null=True)),
                ('ticketimage', models.ImageField(blank=True, db_column='TicketImage', max_length=400, null=True, upload_to='media/images/%y/%m/%d')),
                ('dateouverture', models.DateTimeField(blank=True, db_column='DateOuverture', null=True)),
                ('datemodifier', models.DateTimeField(auto_now=True, db_column='DateModifier', null=True)),
                ('datecreation', models.DateTimeField(auto_now_add=True, db_column='DateCreation', null=True)),
                ('categorie', models.ForeignKey(blank=True, db_column='IdCategorie', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Tickets_cat', to='Helpdesk.categorie')),
                ('element', models.ForeignKey(blank=True, db_column='IdElement', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Tickets_ele', to='Helpdesk.elements')),
                ('etat', models.ForeignKey(blank=True, db_column='IdEtat', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='etat', to='Helpdesk.etat')),
                ('priorite', models.ForeignKey(blank=True, db_column='IdPriorite', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Tickets_pri', to='Helpdesk.priorite')),
                ('typecategorie', models.ForeignKey(blank=True, db_column='TypeCategorie_Id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Tickets_tycat', to='Helpdesk.typecategorie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Ticket',
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'unique_together': {('principal_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('idmessage', models.IntegerField(db_column='IdMessage', primary_key=True, serialize=False)),
                ('messagetext', models.TextField(db_column='MessageText')),
                ('ticket', models.ForeignKey(db_column='IdTicket', on_delete=django.db.models.deletion.DO_NOTHING, related_name='Tickets_msg', to='Helpdesk.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Message',
            },
        ),
        migrations.AddField(
            model_name='entite',
            name='typeentite',
            field=models.ForeignKey(blank=True, db_column='IdTypeEntite', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Helpdesk.typeentite'),
        ),
        migrations.AddField(
            model_name='entite',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entite_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='elements',
            name='typeelement',
            field=models.ForeignKey(blank=True, db_column='IdTypeElement', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Elem_tyelem', to='Helpdesk.typeelement'),
        ),
        migrations.AddField(
            model_name='categorie',
            name='typecategorie',
            field=models.ForeignKey(blank=True, db_column='TypeCategorie_Id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Typecat_cat', to='Helpdesk.typecategorie'),
        ),
    ]
